FROM alpine:3.8
LABEL Maintainer="Bryan Latten <latten@adobe.com>"

# Use in multi-phase builds, when an init process requests for the container to gracefully exit, so that it may be committed
# Used with alternative CMD (worker.sh), leverages supervisor to maintain long-running processes
ENV SIGNAL_BUILD_STOP=99 \
    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \
    S6_KILL_FINISH_MAXTIME=5000 \
    S6_KILL_GRACETIME=3000 \
    S6_VERSION=v1.21.4.0 \
    S6_SHA256=e903f138dea67e75afc0f61e79eba529212b311dc83accc1e18a449d58a2b10c \
    GOSS_VERSION=v0.3.5 \
    GOSS_SHA256=5669df08e406abf594de0e7a7718ef389e5dc7cc76905e7f6f64711e6aad7fa3

# Ensure scripts are available for use in next command
COPY ./container/root/scripts/* /scripts/

# - Symlink variant-specific scripts to default location
# - Add additional repositories to pull packages from
# - Add S6 for zombie reaping, boot-time coordination, signal transformation/distribution: @see https://github.com/just-containers/s6-overlay#known-issues-and-workarounds
# - Add goss for local, serverspec-like testing
RUN ln -s /scripts/clean_alpine.sh /clean.sh && \
    echo '@edge http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories && \
    apk update && \
    apk add --no-cache \
        sed \
        bash \
        grep \
        curl \
    && \
    # Add S6 for zombie reaping, boot-time coordination, signal transformation/distribution
    curl -L https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz -o /tmp/s6.tar.gz && \
    echo "${S6_SHA256}  /tmp/s6.tar.gz" | sha256sum -c - && \
    tar xzf /tmp/s6.tar.gz -C / && \
    rm /tmp/s6.tar.gz && \
    # https://github.com/gliderlabs/docker-alpine/issues/11#issuecomment-106233554
    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' > /etc/nsswitch.conf && \
    # Add goss for local, serverspec-like testing \
    curl -L https://github.com/aelsabbahy/goss/releases/download/${GOSS_VERSION}/goss-linux-amd64 -o /usr/local/bin/goss && \
    echo "${GOSS_SHA256}  /usr/local/bin/goss" | sha256sum -c - && \
    chmod +x /usr/local/bin/goss && \
    apk del curl && \
    /bin/bash -e /clean.sh

# Overlay the root filesystem from this repo
COPY ./container/root /

RUN goss -g goss.base.yaml validate

# NOTE: intentionally NOT using s6 init as the entrypoint
# This would prevent container debugging if any of those service crash
CMD ["/bin/bash", "/run.sh"]
